---
name: Testing CI/CD with GitHub Actions

on:  # yamllint disable-line rule:truthy
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]
  #  types: ["closed"]
  pull_request_target:
    types: ["closed"]
  release:
    # types: ["published"]
    types: ["created"]
  schedule:
    # times are in UTC
    # only runs on default branch https://github.com/orgs/community/discussions/26374
    - cron: "02 16 5 4 *"
    - cron: "9 16 5 4 *"
    # - cron: "22 14 5 4 *"
    # - cron: "34 14 5 4 *"
    # testing every 5 minutes, but intend to disable this after tests run
    # - cron: "*/5 * * * *"

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Run Ruff linter
        uses: astral-sh/ruff-action@v1
        with:
          args: "check"
          changed-files: "true"

      - name: Run Ruff formatter
        uses: astral-sh/ruff-action@v1
        with:
          args: "format --check --diff"
          changed-files: "true"

  markdownlint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      # - name: List files (debugging)
      #   shell: sh
      #   run: ls -la
      #
      # - name: Run mdl (Ruby, style_file specified)
      #   uses: mjbear/mdl-action@specify_directory_old
      #   with:
      #     style_file: .mdl_style.rb
      #     directory: tests
      #
      # - name: Run mdl-action (Ruby, style_file not specified)
      #   uses: mjbear/mdl-action@specify_directory
      #   with:
      #     directory: tests

      - name: Run mdl-action on current dir (Ruby, bewuethr)
        uses: bewuethr/mdl-action@v1
        with:
          style-file: .mdl_style.rb
          # directory defaults to . (current dir)
        #  directory: .

      - name: Run mdl-action on tests dir (Ruby, bewuethr)
        uses: bewuethr/mdl-action@v1
        with:
          # just an example with the style file enabled
          style-file: .mdl_style.rb
          directory: tests

  mdlint_cli2:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: List files (debugging)
        shell: sh
        run: ls -l

      - name: Run markdownlint-cli2
        uses: DavidAnson/markdownlint-cli2-action@v17
        # file globbing configured in .markdownlint-cli2.yaml
        #
        # yamllint disable
        # with:
          # bad, broke, doesn't work
          # globs: '*.md tests/*/*.md'
          #
          # globs: 'tests/*/*.{md,markdown}'
          # globs: '*.{md,markdown}'
        # yamllint enable

  # Maybe get this working later when/if it matters
  # remark-lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4

  #     - name: remark-lint
  #       uses: rickstaa/action-remark-lint@v1

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: .

  # dockerfilelint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4

  #     - name: Run dockerfilelint
  #       uses: luke142367/Docker-Lint-Action@v1.0.0
  #       # yamllint disable
  #       # with:
  #       #   # defaults to Dockerfile
  #       #   target: Dockerfile
  #       # env:
  #       #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       # yamllint enable

  # hadolint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: hadolint/hadolint-action@v3.1.0
  #       # with:
  #       #   dockerfile: Dockerfile

  link_checks:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Link check action
      uses: adriancoman/link-checks-action@1.0.1
      with:
        file-to-check: README.md,tests/foo/foo.md
        # comma separated list of files (better if it supported globbing!)

  markdown_link_check:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Markdown-lint-check
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      # uses tcort/markdown-link-check
      # GH Action somewhat deprecated?

  linkspector:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Run linkspector
      uses: umbrelladocs/action-linkspector@v1
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review
        fail_level: any

  lychee:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Link Checker (lychee)
      id: lychee
      uses: lycheeverse/lychee-action@v2
      # with:
      #  fail: false

  test:
    runs-on: ubuntu-latest
    needs:
      - ruff
      - markdownlint
      - mdlint_cli2
      - yamllint
      # - dockerfilelint
      # - hadolint
      - link_checks
      - markdown_link_check
      - linkspector
      - lychee
    # amended the push conditions so this fires on tag push,
    # but NOT the push+merge since this will fire on PR close
    steps:
      - run: echo "test job"

      # gah, I don't like having to do this ... but at least it's a testing repo
      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #   run: echo "$GITHUB_CONTEXT"

  build:
    runs-on: ubuntu-latest
    needs: test
    # if: github.event.pull_request.merged == true
    if: >-
      ${{
      github.event.pull_request.merged == true ||
      github.event_name == 'push' ||
      github.event_name == 'release'
      }}
    steps:
      - run: echo "build job"

  # technically this should be combined with build, this is a test
  deploy:
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    # if: ${{
    #     github.event_name == 'release' && github.event.action == 'published'
    #     }}
    if: >-
      ${{
      github.triggering_actor == github.repository_owner ||
      github.event_name == 'release' && github.event.action == 'created'
      }}
    steps:
      - run: echo "deploy job"
...
