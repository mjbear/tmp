---
name: Testing CI/CD with GitHub Actions

on:  # yamllint disable-line rule:truthy
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]
  #  types: ["closed"]
  pull_request_target:
    types: ["closed"]
  release:
    # types: ["published"]
    types: ["created"]

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Run Ruff linter
        uses: astral-sh/ruff-action@v1
        with:
          args: "check"
          changed-files: "true"

      - name: Run Ruff formatter
        uses: astral-sh/ruff-action@v1
        with:
          args: "format --check --diff"
          changed-files: "true"

  markdown_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: List files (debugging)
        shell: sh
        run: ls -l

      # - name: Run mdl (Ruby, style_file specified)
      #   uses: mjbear/mdl-action@specify_directory_old
      #   with:
      #     style_file: .mdl_style.rb
      #     directory: tests
      # - name: Run mdl-action (Ruby, style_file not specified)
      #   uses: mjbear/mdl-action@specify_directory
      #   with:
      #     directory: tests

      - name: Run mdl-action on current dir (Ruby, bewuethr)
        uses: bewuethr/mdl-action@v1
        # with:
        #   # style-file: .mdl_style.rb
        #   # directory defaults to . (current dir)
        #   directory: .

      - name: Run mdl-action on tests dir (Ruby, bewuethr)
        uses: bewuethr/mdl-action@v1
        with:
          # just an example with the style file enabled
          style-file: .mdl_style.rb
          directory: tests

  mdlint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: List files (debugging)
        shell: sh
        run: ls -l

      - name: Run markdownlint-cli2
        uses: DavidAnson/markdownlint-cli2-action@v17
        # file globbing configured in .markdownlint-cli2.yaml
        #
        # with:
          # bad, broke, doesn't work
          # globs: '*.md tests/*/*.md'
          #
          # globs: 'tests/*/*.{md,markdown}'
          # globs: '*.{md,markdown}'

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: .

  dockerfilelint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Run dockerfilelint
        uses: luke142367/Docker-Lint-Action@v1.0.0
        # with:
        #   # defaults to Dockerfile
        #   target: Dockerfile
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  hadolint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        # with:
        #   dockerfile: Dockerfile

  test:
    runs-on: ubuntu-latest
    needs:
      - ruff
      - markdown_lint
      - mdlint
      - yamllint
      - dockerfilelint
      - hadolint
    # amended the push conditions so this fires on tag push,
    # but NOT the push+merge since this will fire on PR close
    steps:
      - run: echo "test job"
  
      # gah, I don't like having to do this ... but at least it's a testing repo
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  build:
    runs-on: ubuntu-latest
    needs: test
    # if: github.event.pull_request.merged == true
    if: >-
      ${{
      github.event.pull_request.merged == true ||
      github.event_name == 'push' ||
      github.event_name == 'release'
      }}
    steps:
      - run: echo "build job"

  # technically this should be combined with build, this is a test
  deploy:
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    # if: ${{
    #     github.event_name == 'release' && github.event.action == 'published'
    #     }}
    if: >-
      ${{
      github.triggering_actor == github.repository_owner ||
      github.event_name == 'release' && github.event.action == 'created'
      }}
    steps:
      - run: echo "deploy job"
...
